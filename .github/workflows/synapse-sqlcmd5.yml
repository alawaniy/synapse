name: Run SQLCMD Script

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual triggering

permissions:
  id-token: write  # Ensure write permissions for id-token
  contents: read   # Example: read permissions for repository contents
  
jobs:
  execute-sqlcmd:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
#          client-id: ${{ secrets.AZURE_CLIENT_ID }}
#          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
#          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
#          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#          auth-type: 'SERVICE_PRINCIPAL'  # Ensure auth-type is set to 'spn'
           creds: ${{ secrets.AZURE_CREDENTIALS }}
          
#      - name: Get Credentials from Key Vault
#        id: get-credentials
#        uses: azure/CLI@v1
#        with:
#          azcliversion: 2.30.0
#          scriptType: bash
#          inlineScript: |
#            username=$(az keyvault secret show --name SYNAPSE-USERNAME --vault-name adlssybapsekeyvault --query value -o tsv)
#            password=$(az keyvault secret show --name SYNAPSE-PASSWORD --vault-name adlssybapsekeyvault --query value -o tsv)
#            adls_account_name=$(az keyvault secret show --name ADLS-ACCOUNT-NAME --vault-name adlssybapsekeyvault --query value -o tsv)
#            echo "SYNAPSE_USERNAME=$username" >> $GITHUB_ENV
#            echo "SYNAPSE_PASSWORD=$password" >> $GITHUB_ENV
#            echo "ADLS_ACCOUNT_NAME=$adls_account_name" >> $GITHUB_ENV

      - name: Get Credentials from Key Vault
        id: get-credentials
        run: |
          set -e
          echo "Fetching username from Key Vault..."
          username=$(az keyvault secret show --name SYNAPSE-USERNAME --vault-name adlssybapsekeyvault --query value -o tsv)
          if [ -z "$username" ]; then
            echo "Error: Unable to fetch SYNAPSE-USERNAME from Key Vault"
            exit 1
          fi
          echo "Fetching password from Key Vault..."
          password=$(az keyvault secret show --name SYNAPSE-PASSWORD --vault-name adlssybapsekeyvault --query value -o tsv)
          if [ -z "$password" ]; then
            echo "Error: Unable to fetch SYNAPSE-PASSWORD from Key Vault"
            exit 1
          fi
          echo "Fetching ADLS account name from Key Vault..."
          adls_account_name=$(az keyvault secret show --name ADLS-ACCOUNT-NAME --vault-name adlssybapsekeyvault --query value -o tsv)
          if [ -z "$adls_account_name" ]; then
            echo "Error: Unable to fetch ADLS_ACCOUNT_NAME from Key Vault"
            exit 1
          fi
          echo "SYNAPSE_USERNAME=$username" >> $GITHUB_ENV
          echo "SYNAPSE_PASSWORD=$password" >> $GITHUB_ENV
          echo "ADLS_ACCOUNT_NAME=$adls_account_name" >> $GITHUB_ENV

#      - name: Get Credentials from Key Vault
#        id: get-credentials
#        run: |
#          set -e
#          echo "Fetching username from Key Vault..."
#          username=$(az keyvault secret show --name SYNAPSE-USERNAME --vault-name adlssybapsekeyvault --query value -o tsv)
#          if [ -z "$username" ]; then
#            echo "Error: Unable to fetch SYNAPSE-USERNAME from Key Vault"
#            exit 1
#          fi
#          echo "Fetching password from Key Vault..."
#          password=$(az keyvault secret show --name SYNAPSE-PASSWORD --vault-name adlssybapsekeyvault --query value -o tsv)
#          if [ -z "$password" ]; then
#            echo "Error: Unable to fetch SYNAPSE-PASSWORD from Key Vault"
#            exit 1
#          fi
#          echo "SYNAPSE_USERNAME=$username" >> $GITHUB_ENV
#          echo "SYNAPSE_PASSWORD=$password" >> $GITHUB_ENV

          

      - name: Update SQL scripts with ADLS account name
        run: |
          for sql_file in ./sql/*.sql; do
            echo "Updating $sql_file with ADLS account name..."
            sed -i "s/<ADLS_ACCOUNT_NAME>/${{ env.ADLS_ACCOUNT_NAME }}/g" "$sql_file"
          done

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Execute SQL Scripts using Azure CLI
        env:
          SYNAPSE_SERVER: ${{ secrets.SYNAPSE_SERVER }}
          SYNAPSE_USERNAME: ${{ env.SYNAPSE_USERNAME }}
          SYNAPSE_PASSWORD: ${{ env.SYNAPSE_PASSWORD }}
        run: |
          for sql_file in ./sql/*.sql; do
            echo "Running $sql_file..."
            query=$(<"$sql_file")
            az sql db query \
              --server $SYNAPSE_SERVER \
              --database master \
              --auth-type sql \
              --username $SYNAPSE_USERNAME \
              --password $SYNAPSE_PASSWORD \
              --query "$query"
          done

